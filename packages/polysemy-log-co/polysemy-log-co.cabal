cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.35.0.
--
-- see: https://github.com/sol/hpack

name:           polysemy-log-co
version:        0.9.0.0
synopsis:       Colog adapters for polysemy-log
description:    See https://hackage.haskell.org/package/polysemy-log-co/docs/Polysemy-Log-Co.html
category:       Logging
homepage:       https://github.com/tek/polysemy-log#readme
bug-reports:    https://github.com/tek/polysemy-log/issues
author:         Torsten Schmits
maintainer:     hackage@tryp.io
copyright:      2023 Torsten Schmits
license:        BSD-2-Clause-Patent
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    readme.md
    changelog.md

source-repository head
  type: git
  location: https://github.com/tek/polysemy-log

library
  exposed-modules:
      Polysemy.Log.Colog
      Polysemy.Log.Colog.Atomic
      Polysemy.Log.Colog.Colog
      Polysemy.Log.Colog.Conc
  hs-source-dirs:
      lib
  default-extensions:
      AllowAmbiguousTypes
      ApplicativeDo
      BlockArguments
      DataKinds
      DefaultSignatures
      DeriveAnyClass
      DerivingStrategies
      DerivingVia
      DisambiguateRecordFields
      DuplicateRecordFields
      FunctionalDependencies
      GADTs
      LambdaCase
      LiberalTypeSynonyms
      MultiWayIf
      OverloadedLabels
      OverloadedLists
      OverloadedStrings
      PackageImports
      PartialTypeSignatures
      PatternSynonyms
      QuantifiedConstraints
      QuasiQuotes
      RecordWildCards
      RecursiveDo
      RoleAnnotations
      TemplateHaskell
      TypeFamilies
      TypeFamilyDependencies
      UndecidableInstances
      UnicodeSyntax
      ViewPatterns
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveLift
      DeriveTraversable
      DoAndIfThenElse
      EmptyCase
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      MultiParamTypeClasses
      NamedFieldPuns
      PatternGuards
      PolyKinds
      RankNTypes
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeApplications
      TypeOperators
      TypeSynonymInstances
  ghc-options: -Wall -Widentities -Wincomplete-uni-patterns -Wmissing-deriving-strategies -Wredundant-constraints -Wunused-type-patterns -Wunused-packages
  build-depends:
      base ==4.*
    , co-log ==0.5.*
    , co-log-concurrent ==0.5.*
    , co-log-polysemy >=0.0.1.3 && <0.1
    , incipit-core >=0.4 && <0.6
    , polysemy ==1.9.*
    , polysemy-conc ==0.12.*
    , polysemy-log >=0.9.0.0 && <0.10
    , polysemy-time ==0.6.*
    , stm
  mixins:
      base hiding (Prelude)
    , incipit-core (IncipitCore as Prelude)
    , incipit-core hiding (IncipitCore)
  default-language: Haskell2010

test-suite polysemy-log-co-test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Polysemy.Log.Colog.Test.ConcTest
      Polysemy.Log.Colog.Test.ExampleTest
      Polysemy.Log.Colog.Test.SimpleTest
  hs-source-dirs:
      test
  default-extensions:
      AllowAmbiguousTypes
      ApplicativeDo
      BlockArguments
      DataKinds
      DefaultSignatures
      DeriveAnyClass
      DerivingStrategies
      DerivingVia
      DisambiguateRecordFields
      DuplicateRecordFields
      FunctionalDependencies
      GADTs
      LambdaCase
      LiberalTypeSynonyms
      MultiWayIf
      OverloadedLabels
      OverloadedLists
      OverloadedStrings
      PackageImports
      PartialTypeSignatures
      PatternSynonyms
      QuantifiedConstraints
      QuasiQuotes
      RecordWildCards
      RecursiveDo
      RoleAnnotations
      TemplateHaskell
      TypeFamilies
      TypeFamilyDependencies
      UndecidableInstances
      UnicodeSyntax
      ViewPatterns
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveLift
      DeriveTraversable
      DoAndIfThenElse
      EmptyCase
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      MultiParamTypeClasses
      NamedFieldPuns
      PatternGuards
      PolyKinds
      RankNTypes
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeApplications
      TypeOperators
      TypeSynonymInstances
  ghc-options: -threaded -rtsopts -with-rtsopts=-N -Wall -Widentities -Wincomplete-uni-patterns -Wmissing-deriving-strategies -Wredundant-constraints -Wunused-type-patterns -Wunused-packages
  build-depends:
      base ==4.*
    , co-log
    , co-log-concurrent
    , co-log-polysemy
    , incipit-core >=0.4 && <0.6
    , polysemy ==1.9.*
    , polysemy-log
    , polysemy-log-co
    , polysemy-test >=0.6
    , polysemy-time
    , stm
    , tasty ==1.4.*
  mixins:
      base hiding (Prelude)
    , incipit-core (IncipitCore as Prelude)
    , incipit-core hiding (IncipitCore)
  default-language: Haskell2010
